{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciolopez/Cargapp/client/src/ConnectorStatusCards.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusConfig = {\n  Charging: {\n    label: 'Cargando',\n    color: 'bg-orange-500',\n    icon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-3xl\",\n      children: \"\\u26A1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this)\n  },\n  Available: {\n    label: 'Disponible',\n    color: 'bg-green-500',\n    icon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-3xl\",\n      children: \"\\u2705\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)\n  },\n  Unavailable: {\n    label: 'Fuera de servicio',\n    color: 'bg-gray-400',\n    icon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-3xl\",\n      children: \"\\u26D4\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }\n};\nexport default function ConnectorStatusCards({\n  chargers\n}) {\n  // Contar conectores en cada estado\n  const counts = {\n    Charging: 0,\n    Available: 0,\n    Unavailable: 0\n  };\n  chargers.forEach(charger => {\n    (charger.connectors || []).forEach(conn => {\n      if (conn.status === 'Charging') counts.Charging++;else if (conn.status === 'Available') counts.Available++;else if (conn.status === 'Unavailable') counts.Unavailable++;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-3 gap-4 my-8\",\n    children: Object.entries(statusConfig).map(([status, cfg]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `rounded-xl shadow-lg p-8 flex flex-col items-center border-2 w-full text-left ${cfg.color} bg-opacity-10`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: cfg.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4xl font-bold mb-1 text-orange-700\",\n        children: counts[status]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-base font-semibold text-gray-800\",\n        children: cfg.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = ConnectorStatusCards;\nvar _c;\n$RefreshReg$(_c, \"ConnectorStatusCards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","statusConfig","Charging","label","color","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Available","Unavailable","ConnectorStatusCards","chargers","counts","forEach","charger","connectors","conn","status","Object","entries","map","cfg","_c","$RefreshReg$"],"sources":["/Users/mauriciolopez/Cargapp/client/src/ConnectorStatusCards.jsx"],"sourcesContent":["import React from 'react';\n\nconst statusConfig = {\n  Charging: {\n    label: 'Cargando',\n    color: 'bg-orange-500',\n    icon: <span className=\"text-3xl\">⚡️</span>,\n  },\n  Available: {\n    label: 'Disponible',\n    color: 'bg-green-500',\n    icon: <span className=\"text-3xl\">✅</span>,\n  },\n  Unavailable: {\n    label: 'Fuera de servicio',\n    color: 'bg-gray-400',\n    icon: <span className=\"text-3xl\">⛔️</span>,\n  },\n};\n\nexport default function ConnectorStatusCards({ chargers }) {\n  // Contar conectores en cada estado\n  const counts = { Charging: 0, Available: 0, Unavailable: 0 };\n  chargers.forEach(charger => {\n    (charger.connectors || []).forEach(conn => {\n      if (conn.status === 'Charging') counts.Charging++;\n      else if (conn.status === 'Available') counts.Available++;\n      else if (conn.status === 'Unavailable') counts.Unavailable++;\n    });\n  });\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 my-8\">\n      {Object.entries(statusConfig).map(([status, cfg]) => (\n        <div\n          key={status}\n          className={`rounded-xl shadow-lg p-8 flex flex-col items-center border-2 w-full text-left ${cfg.color} bg-opacity-10`}\n        >\n          <div className=\"mb-2\">{cfg.icon}</div>\n          <div className=\"text-4xl font-bold mb-1 text-orange-700\">{counts[status]}</div>\n          <div className=\"text-base font-semibold text-gray-800\">{cfg.label}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;IACRC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE,eAAe;IACtBC,IAAI,eAAEL,OAAA;MAAMM,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAC3C,CAAC;EACDC,SAAS,EAAE;IACTT,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,cAAc;IACrBC,IAAI,eAAEL,OAAA;MAAMM,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAC1C,CAAC;EACDE,WAAW,EAAE;IACXV,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,aAAa;IACpBC,IAAI,eAAEL,OAAA;MAAMM,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAC3C;AACF,CAAC;AAED,eAAe,SAASG,oBAAoBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACzD;EACA,MAAMC,MAAM,GAAG;IAAEd,QAAQ,EAAE,CAAC;IAAEU,SAAS,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAE,CAAC;EAC5DE,QAAQ,CAACE,OAAO,CAACC,OAAO,IAAI;IAC1B,CAACA,OAAO,CAACC,UAAU,IAAI,EAAE,EAAEF,OAAO,CAACG,IAAI,IAAI;MACzC,IAAIA,IAAI,CAACC,MAAM,KAAK,UAAU,EAAEL,MAAM,CAACd,QAAQ,EAAE,CAAC,KAC7C,IAAIkB,IAAI,CAACC,MAAM,KAAK,WAAW,EAAEL,MAAM,CAACJ,SAAS,EAAE,CAAC,KACpD,IAAIQ,IAAI,CAACC,MAAM,KAAK,aAAa,EAAEL,MAAM,CAACH,WAAW,EAAE;IAC9D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACEb,OAAA;IAAKM,SAAS,EAAC,4CAA4C;IAAAC,QAAA,EACxDe,MAAM,CAACC,OAAO,CAACtB,YAAY,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACH,MAAM,EAAEI,GAAG,CAAC,kBAC9CzB,OAAA;MAEEM,SAAS,EAAE,iFAAiFmB,GAAG,CAACrB,KAAK,gBAAiB;MAAAG,QAAA,gBAEtHP,OAAA;QAAKM,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEkB,GAAG,CAACpB;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtCX,OAAA;QAAKM,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAES,MAAM,CAACK,MAAM;MAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/EX,OAAA;QAAKM,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAEkB,GAAG,CAACtB;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GALnEU,MAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMR,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACe,EAAA,GAzBuBZ,oBAAoB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}