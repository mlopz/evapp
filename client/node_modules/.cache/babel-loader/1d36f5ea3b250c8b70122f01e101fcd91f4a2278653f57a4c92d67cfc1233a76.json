{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciolopez/Cargapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ChargersList from './ChargersList';\nimport SessionsList from './SessionsList';\nimport ChargerStatusCards from './ChargerStatusCards';\nimport ChargerConnectorsView from './ChargerConnectorsView';\nimport ClearDatabasePage from './ClearDatabasePage';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport ConnectorStatusCards from './ConnectorStatusCards';\nimport ChargerCardModal from './ChargerCardModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction ChargerCard({\n  charger,\n  minutes,\n  sessions,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rounded-xl shadow-lg p-6 bg-white border-2 w-full flex flex-col items-center hover:scale-105 hover:border-orange-500 transition cursor-pointer mb-4\",\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lg font-bold text-gray-800 mb-2\",\n      children: charger.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-6 mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xl font-bold text-orange-600\",\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500\",\n          children: \"Minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xl font-bold text-orange-600\",\n          children: sessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500\",\n          children: \"Sesiones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ChargerCard;\nfunction App() {\n  _s();\n  const [chargers, setChargers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterStatus, setFilterStatus] = useState(null);\n  const [selectedCharger, setSelectedCharger] = useState(null);\n  const [selectedConnectorId, setSelectedConnectorId] = useState(null);\n  const [stats, setStats] = useState({\n    total_sessions: 0,\n    total_minutes: 0\n  });\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [modalCharger, setModalCharger] = useState(null);\n  const fetchChargers = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_URL}/api/chargers`);\n      const data = await res.json();\n      setChargers(data.chargers || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener los cargadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Nuevo: fetch de todas las sesiones para el home\n  const fetchAllSessions = async () => {\n    try {\n      const res = await fetch(`${API_URL}/api/sessions`);\n      if (!res.ok) throw new Error('Respuesta no OK');\n      const contentType = res.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Respuesta no es JSON');\n      }\n      const data = await res.json();\n      setSessions(Array.isArray(data) ? data : data.sessions || []);\n    } catch (err) {\n      // No interrumpe el loading general\n      console.error('Error al obtener todas las sesiones', err);\n    }\n  };\n  useEffect(() => {\n    let interval;\n    fetchChargers();\n    fetchAllSessions();\n    const fetchStats = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/sessions/stats`);\n        const data = await res.json();\n        setStats({\n          total_sessions: data.total_sessions || 0,\n          total_minutes: data.total_minutes || 0\n        });\n      } catch (err) {\n        setStats({\n          total_sessions: 0,\n          total_minutes: 0\n        });\n      }\n    };\n    fetchStats();\n    interval = setInterval(() => {\n      fetchChargers();\n      fetchAllSessions();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Obtener sesiones filtradas por chargerName y connectorId\n  const fetchSessions = async (chargerName, connectorId) => {\n    setLoading(true);\n    try {\n      let url = `${API_URL}/api/sessions`;\n      const params = [];\n      if (chargerName) params.push(`chargerName=${encodeURIComponent(chargerName)}`);\n      if (connectorId) params.push(`connectorId=${encodeURIComponent(connectorId)}`);\n      if (params.length > 0) url += `?${params.join('&')}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setSessions(data.sessions || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener las sesiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cuando se selecciona un conector, obtener el historial real filtrado\n  useEffect(() => {\n    if (selectedConnectorId && selectedCharger) {\n      fetchSessions(selectedCharger.name, selectedConnectorId);\n    }\n  }, [selectedConnectorId, selectedCharger]);\n  useEffect(() => {\n    if (sessions.length > 0) {\n      console.log('Ejemplo de sesión:', sessions[0]);\n    }\n  }, [sessions]);\n\n  // Filtrar cargadores según el estado seleccionado\n  const filteredChargers = selectedStatus ? chargers.filter(c => (c.connectors || []).some(conn => conn.status === selectedStatus)) : [];\n\n  // Estado para stats por cargador\n  const [chargerStats, setChargerStats] = useState({});\n  useEffect(() => {\n    if (!filteredChargers.length) return;\n    filteredChargers.forEach(charger => {\n      fetch(`${process.env.REACT_APP_API_URL}/api/sessions/stats?charger_name=${encodeURIComponent(charger.name)}`).then(res => res.json()).then(data => {\n        setChargerStats(prev => ({\n          ...prev,\n          [charger.name]: data\n        }));\n      });\n    });\n  }, [filteredChargers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(ConnectorStatusCards, {\n      chargers: chargers,\n      onSelectStatus: setSelectedStatus,\n      selectedStatus: selectedStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), selectedStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\",\n      children: filteredChargers.map(charger => {\n        var _chargerStats$charger, _chargerStats$charger2;\n        return /*#__PURE__*/_jsxDEV(ChargerCard, {\n          charger: charger,\n          minutes: ((_chargerStats$charger = chargerStats[charger.name]) === null || _chargerStats$charger === void 0 ? void 0 : _chargerStats$charger.total_minutes) || 0,\n          sessions: ((_chargerStats$charger2 = chargerStats[charger.name]) === null || _chargerStats$charger2 === void 0 ? void 0 : _chargerStats$charger2.total_sessions) || 0,\n          onClick: () => setModalCharger(charger)\n        }, charger.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChargerCardModal, {\n      charger: modalCharger,\n      onClose: () => setModalCharger(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6w+nOtZg47bGdRnje/KRl3Qqd2s=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChargerCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ChargersList","SessionsList","ChargerStatusCards","ChargerConnectorsView","ClearDatabasePage","BrowserRouter","Router","Route","Routes","ConnectorStatusCards","ChargerCardModal","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","ChargerCard","charger","minutes","sessions","onClick","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","chargers","setChargers","setSessions","loading","setLoading","error","setError","filterStatus","setFilterStatus","selectedCharger","setSelectedCharger","selectedConnectorId","setSelectedConnectorId","stats","setStats","total_sessions","total_minutes","selectedStatus","setSelectedStatus","modalCharger","setModalCharger","fetchChargers","res","fetch","data","json","err","fetchAllSessions","ok","Error","contentType","headers","get","includes","Array","isArray","console","interval","fetchStats","setInterval","clearInterval","fetchSessions","chargerName","connectorId","url","params","push","encodeURIComponent","length","join","log","filteredChargers","filter","c","connectors","some","conn","status","chargerStats","setChargerStats","forEach","then","prev","onSelectStatus","map","_chargerStats$charger","_chargerStats$charger2","onClose","_c2","$RefreshReg$"],"sources":["/Users/mauriciolopez/Cargapp/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ChargersList from './ChargersList';\nimport SessionsList from './SessionsList';\nimport ChargerStatusCards from './ChargerStatusCards';\nimport ChargerConnectorsView from './ChargerConnectorsView';\nimport ClearDatabasePage from './ClearDatabasePage';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport ConnectorStatusCards from './ConnectorStatusCards';\nimport ChargerCardModal from './ChargerCardModal';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction ChargerCard({ charger, minutes, sessions, onClick }) {\n  return (\n    <button\n      className=\"rounded-xl shadow-lg p-6 bg-white border-2 w-full flex flex-col items-center hover:scale-105 hover:border-orange-500 transition cursor-pointer mb-4\"\n      onClick={onClick}\n    >\n      <div className=\"text-lg font-bold text-gray-800 mb-2\">{charger.name}</div>\n      <div className=\"flex gap-6 mb-1\">\n        <div className=\"flex flex-col items-center\">\n          <span className=\"text-xl font-bold text-orange-600\">{minutes}</span>\n          <span className=\"text-xs text-gray-500\">Minutos</span>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <span className=\"text-xl font-bold text-orange-600\">{sessions}</span>\n          <span className=\"text-xs text-gray-500\">Sesiones</span>\n        </div>\n      </div>\n    </button>\n  );\n}\n\nfunction App() {\n  const [chargers, setChargers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterStatus, setFilterStatus] = useState(null);\n  const [selectedCharger, setSelectedCharger] = useState(null);\n  const [selectedConnectorId, setSelectedConnectorId] = useState(null);\n  const [stats, setStats] = useState({ total_sessions: 0, total_minutes: 0 });\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [modalCharger, setModalCharger] = useState(null);\n\n  const fetchChargers = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_URL}/api/chargers`);\n      const data = await res.json();\n      setChargers(data.chargers || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener los cargadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Nuevo: fetch de todas las sesiones para el home\n  const fetchAllSessions = async () => {\n    try {\n      const res = await fetch(`${API_URL}/api/sessions`);\n      if (!res.ok) throw new Error('Respuesta no OK');\n      const contentType = res.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Respuesta no es JSON');\n      }\n      const data = await res.json();\n      setSessions(Array.isArray(data) ? data : (data.sessions || []));\n    } catch (err) {\n      // No interrumpe el loading general\n      console.error('Error al obtener todas las sesiones', err);\n    }\n  };\n\n  useEffect(() => {\n    let interval;\n    fetchChargers();\n    fetchAllSessions();\n    const fetchStats = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/sessions/stats`);\n        const data = await res.json();\n        setStats({\n          total_sessions: data.total_sessions || 0,\n          total_minutes: data.total_minutes || 0\n        });\n      } catch (err) {\n        setStats({ total_sessions: 0, total_minutes: 0 });\n      }\n    };\n    fetchStats();\n    interval = setInterval(() => {\n      fetchChargers();\n      fetchAllSessions();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Obtener sesiones filtradas por chargerName y connectorId\n  const fetchSessions = async (chargerName, connectorId) => {\n    setLoading(true);\n    try {\n      let url = `${API_URL}/api/sessions`;\n      const params = [];\n      if (chargerName) params.push(`chargerName=${encodeURIComponent(chargerName)}`);\n      if (connectorId) params.push(`connectorId=${encodeURIComponent(connectorId)}`);\n      if (params.length > 0) url += `?${params.join('&')}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setSessions(data.sessions || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener las sesiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cuando se selecciona un conector, obtener el historial real filtrado\n  useEffect(() => {\n    if (selectedConnectorId && selectedCharger) {\n      fetchSessions(selectedCharger.name, selectedConnectorId);\n    }\n  }, [selectedConnectorId, selectedCharger]);\n\n  useEffect(() => {\n    if (sessions.length > 0) {\n      console.log('Ejemplo de sesión:', sessions[0]);\n    }\n  }, [sessions]);\n\n  // Filtrar cargadores según el estado seleccionado\n  const filteredChargers = selectedStatus\n    ? chargers.filter(c => (c.connectors || []).some(conn => conn.status === selectedStatus))\n    : [];\n\n  // Estado para stats por cargador\n  const [chargerStats, setChargerStats] = useState({});\n  useEffect(() => {\n    if (!filteredChargers.length) return;\n    filteredChargers.forEach(charger => {\n      fetch(`${process.env.REACT_APP_API_URL}/api/sessions/stats?charger_name=${encodeURIComponent(charger.name)}`)\n        .then(res => res.json())\n        .then(data => {\n          setChargerStats(prev => ({ ...prev, [charger.name]: data }));\n        });\n    });\n  }, [filteredChargers]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <ConnectorStatusCards chargers={chargers} onSelectStatus={setSelectedStatus} selectedStatus={selectedStatus} />\n      {selectedStatus && (\n        <div className=\"mt-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n          {filteredChargers.map(charger => (\n            <ChargerCard\n              key={charger.name}\n              charger={charger}\n              minutes={chargerStats[charger.name]?.total_minutes || 0}\n              sessions={chargerStats[charger.name]?.total_sessions || 0}\n              onClick={() => setModalCharger(charger)}\n            />\n          ))}\n        </div>\n      )}\n      <ChargerCardModal charger={modalCharger} onClose={() => setModalCharger(null)} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}