{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciolopez/Cargapp/client/src/ClearDatabasePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClearDatabasePage() {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [confirming, setConfirming] = useState(false);\n  const handleClear = async () => {\n    setStatus(null);\n    try {\n      const res = await fetch(process.env.REACT_APP_API_URL + '/api/clear-db', {\n        method: 'POST'\n      });\n      const data = await res.json();\n      if (data.success) {\n        setStatus('¡Base de datos limpiada correctamente!');\n      } else {\n        setStatus('Error: ' + (data.message || 'No se pudo limpiar la base.'));\n      }\n    } catch (err) {\n      setStatus('Error de red o servidor.');\n    }\n    setConfirming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-12 p-6 bg-white rounded shadow border text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"LIMPIAR BASE DE DATOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-red-700\",\n      children: \"Esta acci\\xF3n eliminar\\xE1 TODOS los registros de sesiones y monitoreo. \\xA1No se puede deshacer!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 font-semibold text-blue-700\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this), !confirming ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 font-bold\",\n      onClick: () => setConfirming(true),\n      children: \"Limpiar base de datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: \"\\xBFSeguro? Esta acci\\xF3n es irreversible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-700 text-white px-3 py-1 rounded mr-2\",\n        onClick: handleClear,\n        children: \"S\\xED, limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-gray-300 px-3 py-1 rounded\",\n        onClick: () => setConfirming(false),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ClearDatabasePage, \"nkS/N3PG7IoJ1qdNNAvRBBtN8BE=\");\n_c = ClearDatabasePage;\nvar _c;\n$RefreshReg$(_c, \"ClearDatabasePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ClearDatabasePage","_s","status","setStatus","confirming","setConfirming","handleClear","res","fetch","process","env","REACT_APP_API_URL","method","data","json","success","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mauriciolopez/Cargapp/client/src/ClearDatabasePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function ClearDatabasePage() {\n  const [status, setStatus] = useState(null);\n  const [confirming, setConfirming] = useState(false);\n\n  const handleClear = async () => {\n    setStatus(null);\n    try {\n      const res = await fetch(process.env.REACT_APP_API_URL + '/api/clear-db', {\n        method: 'POST',\n      });\n      const data = await res.json();\n      if (data.success) {\n        setStatus('¡Base de datos limpiada correctamente!');\n      } else {\n        setStatus('Error: ' + (data.message || 'No se pudo limpiar la base.'));\n      }\n    } catch (err) {\n      setStatus('Error de red o servidor.');\n    }\n    setConfirming(false);\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-12 p-6 bg-white rounded shadow border text-center\">\n      <h2 className=\"text-xl font-bold mb-4\">LIMPIAR BASE DE DATOS</h2>\n      <p className=\"mb-4 text-red-700\">Esta acción eliminará TODOS los registros de sesiones y monitoreo. ¡No se puede deshacer!</p>\n      {status && <div className=\"mb-4 font-semibold text-blue-700\">{status}</div>}\n      {!confirming ? (\n        <button\n          className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 font-bold\"\n          onClick={() => setConfirming(true)}\n        >\n          Limpiar base de datos\n        </button>\n      ) : (\n        <div>\n          <p className=\"mb-2\">¿Seguro? Esta acción es irreversible.</p>\n          <button\n            className=\"bg-red-700 text-white px-3 py-1 rounded mr-2\"\n            onClick={handleClear}\n          >\n            Sí, limpiar\n          </button>\n          <button\n            className=\"bg-gray-300 px-3 py-1 rounded\"\n            onClick={() => setConfirming(false)}\n          >\n            Cancelar\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}