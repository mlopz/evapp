{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciolopez/Cargapp/client/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ChargersList from './ChargersList';\nimport SessionsList from './SessionsList';\nimport ChargerStatusCards from './ChargerStatusCards';\nimport ChargerConnectorsView from './ChargerConnectorsView';\nimport ClearDatabasePage from './ClearDatabasePage';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport ConnectorStatusCards from './ConnectorStatusCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction ChargerStatsRow({\n  charger\n}) {\n  _s();\n  const [stats, setStats] = useState({\n    total_sessions: 0,\n    total_minutes: 0\n  });\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/api/sessions/stats?charger_name=${encodeURIComponent(charger.name)}`).then(res => res.json()).then(data => setStats({\n      total_sessions: data.total_sessions || 0,\n      total_minutes: data.total_minutes || 0\n    })).catch(() => setStats({\n      total_sessions: 0,\n      total_minutes: 0\n    }));\n  }, [charger.name]);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"border-b\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"py-2 px-4 font-semibold text-gray-800\",\n      children: charger.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"py-2 px-4 text-orange-700\",\n      children: stats.total_minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"py-2 px-4 text-orange-700\",\n      children: stats.total_sessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ChargerStatsRow, \"P+pXLlork30Nlewg2YSGXSbo++E=\");\n_c = ChargerStatsRow;\nfunction App() {\n  _s2();\n  const [chargers, setChargers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterStatus, setFilterStatus] = useState(null);\n  const [selectedCharger, setSelectedCharger] = useState(null);\n  const [selectedConnectorId, setSelectedConnectorId] = useState(null);\n  const [stats, setStats] = useState({\n    total_sessions: 0,\n    total_minutes: 0\n  });\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const fetchChargers = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_URL}/api/chargers`);\n      const data = await res.json();\n      setChargers(data.chargers || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener los cargadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Nuevo: fetch de todas las sesiones para el home\n  const fetchAllSessions = async () => {\n    try {\n      const res = await fetch(`${API_URL}/api/sessions`);\n      if (!res.ok) throw new Error('Respuesta no OK');\n      const contentType = res.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Respuesta no es JSON');\n      }\n      const data = await res.json();\n      setSessions(Array.isArray(data) ? data : data.sessions || []);\n    } catch (err) {\n      // No interrumpe el loading general\n      console.error('Error al obtener todas las sesiones', err);\n    }\n  };\n  useEffect(() => {\n    let interval;\n    fetchChargers();\n    fetchAllSessions();\n    const fetchStats = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/sessions/stats`);\n        const data = await res.json();\n        setStats({\n          total_sessions: data.total_sessions || 0,\n          total_minutes: data.total_minutes || 0\n        });\n      } catch (err) {\n        setStats({\n          total_sessions: 0,\n          total_minutes: 0\n        });\n      }\n    };\n    fetchStats();\n    interval = setInterval(() => {\n      fetchChargers();\n      fetchAllSessions();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Obtener sesiones filtradas por chargerName y connectorId\n  const fetchSessions = async (chargerName, connectorId) => {\n    setLoading(true);\n    try {\n      let url = `${API_URL}/api/sessions`;\n      const params = [];\n      if (chargerName) params.push(`chargerName=${encodeURIComponent(chargerName)}`);\n      if (connectorId) params.push(`connectorId=${encodeURIComponent(connectorId)}`);\n      if (params.length > 0) url += `?${params.join('&')}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setSessions(data.sessions || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener las sesiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cuando se selecciona un conector, obtener el historial real filtrado\n  useEffect(() => {\n    if (selectedConnectorId && selectedCharger) {\n      fetchSessions(selectedCharger.name, selectedConnectorId);\n    }\n  }, [selectedConnectorId, selectedCharger]);\n  useEffect(() => {\n    if (sessions.length > 0) {\n      console.log('Ejemplo de sesión:', sessions[0]);\n    }\n  }, [sessions]);\n\n  // Filtrar cargadores según el estado seleccionado\n  const filteredChargers = selectedStatus ? chargers.filter(c => (c.connectors || []).some(conn => conn.status === selectedStatus)) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(ConnectorStatusCards, {\n      chargers: chargers,\n      onSelectStatus: setSelectedStatus,\n      selectedStatus: selectedStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), selectedStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-gray-800\",\n        children: [\"Cargadores en estado \\\"\", selectedStatus === 'Charging' ? 'Cargando' : selectedStatus === 'Available' ? 'Disponible' : 'Fuera de servicio', \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full bg-white rounded shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 text-left\",\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 text-left\",\n                children: \"Minutos acumulados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-2 px-4 text-left\",\n                children: \"Sesiones totales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredChargers.map(charger => /*#__PURE__*/_jsxDEV(ChargerStatsRow, {\n              charger: charger\n            }, charger.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"L5hsOUIH4MPJ8DSZOunaXQu32P8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChargerStatsRow\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ChargersList","SessionsList","ChargerStatusCards","ChargerConnectorsView","ClearDatabasePage","BrowserRouter","Router","Route","Routes","ConnectorStatusCards","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","ChargerStatsRow","charger","_s","stats","setStats","total_sessions","total_minutes","fetch","encodeURIComponent","name","then","res","json","data","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","chargers","setChargers","sessions","setSessions","loading","setLoading","error","setError","filterStatus","setFilterStatus","selectedCharger","setSelectedCharger","selectedConnectorId","setSelectedConnectorId","selectedStatus","setSelectedStatus","fetchChargers","err","fetchAllSessions","ok","Error","contentType","headers","get","includes","Array","isArray","console","interval","fetchStats","setInterval","clearInterval","fetchSessions","chargerName","connectorId","url","params","push","length","join","log","filteredChargers","filter","c","connectors","some","conn","status","onSelectStatus","map","_c2","$RefreshReg$"],"sources":["/Users/mauriciolopez/Cargapp/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ChargersList from './ChargersList';\nimport SessionsList from './SessionsList';\nimport ChargerStatusCards from './ChargerStatusCards';\nimport ChargerConnectorsView from './ChargerConnectorsView';\nimport ClearDatabasePage from './ClearDatabasePage';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport ConnectorStatusCards from './ConnectorStatusCards';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction ChargerStatsRow({ charger }) {\n  const [stats, setStats] = useState({ total_sessions: 0, total_minutes: 0 });\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/api/sessions/stats?charger_name=${encodeURIComponent(charger.name)}`)\n      .then(res => res.json())\n      .then(data => setStats({\n        total_sessions: data.total_sessions || 0,\n        total_minutes: data.total_minutes || 0\n      }))\n      .catch(() => setStats({ total_sessions: 0, total_minutes: 0 }));\n  }, [charger.name]);\n  return (\n    <tr className=\"border-b\">\n      <td className=\"py-2 px-4 font-semibold text-gray-800\">{charger.name}</td>\n      <td className=\"py-2 px-4 text-orange-700\">{stats.total_minutes}</td>\n      <td className=\"py-2 px-4 text-orange-700\">{stats.total_sessions}</td>\n    </tr>\n  );\n}\n\nfunction App() {\n  const [chargers, setChargers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterStatus, setFilterStatus] = useState(null);\n  const [selectedCharger, setSelectedCharger] = useState(null);\n  const [selectedConnectorId, setSelectedConnectorId] = useState(null);\n  const [stats, setStats] = useState({ total_sessions: 0, total_minutes: 0 });\n  const [selectedStatus, setSelectedStatus] = useState(null);\n\n  const fetchChargers = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_URL}/api/chargers`);\n      const data = await res.json();\n      setChargers(data.chargers || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener los cargadores');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Nuevo: fetch de todas las sesiones para el home\n  const fetchAllSessions = async () => {\n    try {\n      const res = await fetch(`${API_URL}/api/sessions`);\n      if (!res.ok) throw new Error('Respuesta no OK');\n      const contentType = res.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Respuesta no es JSON');\n      }\n      const data = await res.json();\n      setSessions(Array.isArray(data) ? data : (data.sessions || []));\n    } catch (err) {\n      // No interrumpe el loading general\n      console.error('Error al obtener todas las sesiones', err);\n    }\n  };\n\n  useEffect(() => {\n    let interval;\n    fetchChargers();\n    fetchAllSessions();\n    const fetchStats = async () => {\n      try {\n        const res = await fetch(`${API_URL}/api/sessions/stats`);\n        const data = await res.json();\n        setStats({\n          total_sessions: data.total_sessions || 0,\n          total_minutes: data.total_minutes || 0\n        });\n      } catch (err) {\n        setStats({ total_sessions: 0, total_minutes: 0 });\n      }\n    };\n    fetchStats();\n    interval = setInterval(() => {\n      fetchChargers();\n      fetchAllSessions();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Obtener sesiones filtradas por chargerName y connectorId\n  const fetchSessions = async (chargerName, connectorId) => {\n    setLoading(true);\n    try {\n      let url = `${API_URL}/api/sessions`;\n      const params = [];\n      if (chargerName) params.push(`chargerName=${encodeURIComponent(chargerName)}`);\n      if (connectorId) params.push(`connectorId=${encodeURIComponent(connectorId)}`);\n      if (params.length > 0) url += `?${params.join('&')}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setSessions(data.sessions || []);\n      setError(null);\n    } catch (err) {\n      setError('Error al obtener las sesiones');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cuando se selecciona un conector, obtener el historial real filtrado\n  useEffect(() => {\n    if (selectedConnectorId && selectedCharger) {\n      fetchSessions(selectedCharger.name, selectedConnectorId);\n    }\n  }, [selectedConnectorId, selectedCharger]);\n\n  useEffect(() => {\n    if (sessions.length > 0) {\n      console.log('Ejemplo de sesión:', sessions[0]);\n    }\n  }, [sessions]);\n\n  // Filtrar cargadores según el estado seleccionado\n  const filteredChargers = selectedStatus\n    ? chargers.filter(c => (c.connectors || []).some(conn => conn.status === selectedStatus))\n    : [];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <ConnectorStatusCards chargers={chargers} onSelectStatus={setSelectedStatus} selectedStatus={selectedStatus} />\n      {selectedStatus && (\n        <div className=\"mt-8\">\n          <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Cargadores en estado \"{selectedStatus === 'Charging' ? 'Cargando' : selectedStatus === 'Available' ? 'Disponible' : 'Fuera de servicio'}\"</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white rounded shadow\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 text-left\">Nombre</th>\n                  <th className=\"py-2 px-4 text-left\">Minutos acumulados</th>\n                  <th className=\"py-2 px-4 text-left\">Sesiones totales</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredChargers.map(charger => (\n                  <ChargerStatsRow key={charger.name} charger={charger} />\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}