{"ast":null,"code":"// Calcula los minutos acumulados de un conector específico\nexport function getConnectorAccumulatedMinutes(sessions, chargerName, connectorId) {\n  // Filtrar sesiones de ese conector\n  const connectorSessions = sessions.filter(s => s.charger_name === chargerName && s.connector_id === connectorId);\n  let acumulado = connectorSessions.reduce((sum, s) => sum + (s.duration_minutes || 0), 0);\n  // Sumar minutos en tiempo real si hay sesión activa y duration_minutes es 0\n  const activeSession = connectorSessions.find(s => s.active && s.session_start && (!s.duration_minutes || s.duration_minutes === 0));\n  if (activeSession && activeSession.session_start) {\n    const extra = Math.floor((Date.now() - new Date(activeSession.session_start)) / 60000);\n    acumulado += extra;\n  }\n  return acumulado;\n}\n\n// Calcula los minutos acumulados de un cargador sumando todos sus conectores\nexport function getChargerAccumulatedMinutes(sessions, chargerName, connectorIds) {\n  return connectorIds.reduce((sum, connectorId) => {\n    return sum + getConnectorAccumulatedMinutes(sessions, chargerName, connectorId);\n  }, 0);\n}","map":{"version":3,"names":["getConnectorAccumulatedMinutes","sessions","chargerName","connectorId","connectorSessions","filter","s","charger_name","connector_id","acumulado","reduce","sum","duration_minutes","activeSession","find","active","session_start","extra","Math","floor","Date","now","getChargerAccumulatedMinutes","connectorIds"],"sources":["/Users/mauriciolopez/Cargapp/client/src/utils/sessionUtils.js"],"sourcesContent":["// Calcula los minutos acumulados de un conector específico\nexport function getConnectorAccumulatedMinutes(sessions, chargerName, connectorId) {\n  // Filtrar sesiones de ese conector\n  const connectorSessions = sessions.filter(\n    s => s.charger_name === chargerName && s.connector_id === connectorId\n  );\n  let acumulado = connectorSessions.reduce((sum, s) => sum + (s.duration_minutes || 0), 0);\n  // Sumar minutos en tiempo real si hay sesión activa y duration_minutes es 0\n  const activeSession = connectorSessions.find(s => s.active && s.session_start && (!s.duration_minutes || s.duration_minutes === 0));\n  if (activeSession && activeSession.session_start) {\n    const extra = Math.floor((Date.now() - new Date(activeSession.session_start)) / 60000);\n    acumulado += extra;\n  }\n  return acumulado;\n}\n\n// Calcula los minutos acumulados de un cargador sumando todos sus conectores\nexport function getChargerAccumulatedMinutes(sessions, chargerName, connectorIds) {\n  return connectorIds.reduce((sum, connectorId) => {\n    return sum + getConnectorAccumulatedMinutes(sessions, chargerName, connectorId);\n  }, 0);\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,8BAA8BA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAE;EACjF;EACA,MAAMC,iBAAiB,GAAGH,QAAQ,CAACI,MAAM,CACvCC,CAAC,IAAIA,CAAC,CAACC,YAAY,KAAKL,WAAW,IAAII,CAAC,CAACE,YAAY,KAAKL,WAC5D,CAAC;EACD,IAAIM,SAAS,GAAGL,iBAAiB,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEL,CAAC,KAAKK,GAAG,IAAIL,CAAC,CAACM,gBAAgB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACxF;EACA,MAAMC,aAAa,GAAGT,iBAAiB,CAACU,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACS,MAAM,IAAIT,CAAC,CAACU,aAAa,KAAK,CAACV,CAAC,CAACM,gBAAgB,IAAIN,CAAC,CAACM,gBAAgB,KAAK,CAAC,CAAC,CAAC;EACnI,IAAIC,aAAa,IAAIA,aAAa,CAACG,aAAa,EAAE;IAChD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAID,IAAI,CAACP,aAAa,CAACG,aAAa,CAAC,IAAI,KAAK,CAAC;IACtFP,SAAS,IAAIQ,KAAK;EACpB;EACA,OAAOR,SAAS;AAClB;;AAEA;AACA,OAAO,SAASa,4BAA4BA,CAACrB,QAAQ,EAAEC,WAAW,EAAEqB,YAAY,EAAE;EAChF,OAAOA,YAAY,CAACb,MAAM,CAAC,CAACC,GAAG,EAAER,WAAW,KAAK;IAC/C,OAAOQ,GAAG,GAAGX,8BAA8B,CAACC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,CAAC;EACjF,CAAC,EAAE,CAAC,CAAC;AACP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}